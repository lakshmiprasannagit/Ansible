d:
cd D:\trainings\ubuntu
vagrant up
vagrant ssh
esc shift a 
esc shift zz
esc shift g    -end of the line

Mygithub@111

Ansible tower
vagrant@control:~$
 d:
cd D:\trainings\tower	
vagrant init ansible/tower
vagrant up --provider virtualbox
vagrant ssh


https://10.42.0.42/

Username: admin
Password: VEJrnLMGzXZ4
=================================
add the below in all the .bashrc files


alisas lt='ls -ltra'

alias bashrc='vim ~/.bashrc'
alias sbash='source ~/.bashrc'

alias pb='cd ~/ansible/playbook'
alias ans='cd ~/ansible'

alias control='ssh 192.168.135.10'
alias lb01='ssh 192.168.135.101'
alias app01='ssh 192.168.135.111'
alias app02='ssh 192.168.135.112'
alias app02='ssh 192.168.135.112'
alias db01='ssh 192.168.135.121'

===============================

vagrant ssh --to connect to the control (main server)
ifconfig - shows in which server we are 

If in control server , perform the below steps :
vim .bashrc
add the above alias 
esc :wq
source .bashrc --after chainging the bashrc file
sudo vim /etc/hostname
comment the first line
add "control" 
save the file 

Now perform the same steps for app01,app02,db01 

To go to app01 , just type app01 .

after setting up the server , exit & come to the D:\trainings\ubuntu dir

vagrant hault -- to stop the servers to take into account the changes done 

vagrant up --to bring up the 

========================================


ansible --list-hosts all
vim ansible/config

Inventory- list of hosts 
vagrant@vagrant-ubuntu-trusty-64:~/ansible
copy the file from the https://github.com/wipphanp/ansible and create in ansible directory


 ansible -i dev --list-hosts all
 ansible --list-hosts all
================================
Ansible commands

1. ansible -m ping all   
-m means all machines
ping is a module in ansible

2. ansible -m command -a 'echo Hi' all
-m means all machnises
-commnad is a module
-a arugment
all - to publish in 

3.  ansible --list-hosts webserver

4.ansible -m command -a "hostname" all

 =======================================
cat >hostname.yml
#List of hostname
---
  - hosts: all
    tasks:
     - command: hostname
     - command: echo Hi

ansible-playbook playbook/hostname.yml

======================

nginx -v

============================================
cat > lb.yml
#Load balancer
---
  - hosts:  loadbalancer
    become:  true 
    tasks:
      - name:  installing nginx
        apt:  name=nginx state=present update_cache=yes	

execute the below from ansibledirectory
ansible-playbook playbook/lb.yml

go to lb01
vagrant@lb01:~$ ps -wf | grep ngnix

service nginx status

=========================================================	
cat > db.yml
#database server
---
  - hosts:  database
    become:  true
    tasks:
      - name:  install mysql-server
        apt:  name=mysql-server state=present update_cache=yes	

go to db01 --just type db01
mysql --version -- to check if the db is already installed
service mysql status

come back to control --just type control

ansible-playbook playbook/db.yml

===========================================================
cat > ws.yml
#Webserver
---
  - hosts:  webserver
    become:  true
    tasks:
      - name:  install webserver component
        apt:  name={{ item  }} state=present update_cache=yes
        with_items:
          - apache2
          - libapache2-mod-wsgi
          - python-pip
          - python-virtualenv 	
  		
ansible-playbook playbook/ws.yml
===========================================================
wget -qO- http://lb01 | less
wget -qO- http://app01 | less
wget -qO- http://app02 | less

go to app01 --to see where the services are installed 
cd /etc/apache2
ls -lt
cd sites-enabled
000-default.conf -> ../sites-available/000-default.conf --Points to default 
==============================

come to control --just type control

cat > control.yml
#control
---
  - hosts:  control
    become:  true
    tasks:
      - name:  install tools
        apt:  name={{ item  }} state=present update_cache=yes
        with_items:
          - curl

ansible-playbook control.yml

curl lb01 

==============================================
vagrant@control:~/ansible

ansible -m setup db01

ansible -a "netstat" -an" db01
========================================
cat > lb.yml
#Load balancer
---
  - hosts:  loadbalancer
    become:  true 
    tasks:
      - name:  installing nginx
        apt:  name=nginx state=present update_cache=yes
      
      - name:  ensuring nginx is started
        service:  name=nginx state=started enabled=yes

ansible-playbook lb.yml

================================================
cat > db.yml
#database server
---
  - hosts:  database
    become:  true
    tasks:
      - name:  install mysql-server
        apt:  name=mysql-server state=present update_cache=yes
      
      - name:  ensuring mysql server is up and running
        service:  name=mysql state=started enabled=yes

ansible-playbook db.yml

================================================

cat > stop_stack.yml
#stops all the services
---
  - hosts:  loadbalancer
    become:  true
    tasks:
      - name:  ensure nginx stopped
        service:  name=nginx state=stopped

  - hosts:  webserver
    become:  true
    tasks:
      - name:  ensure apache2 stopped
        service:  name=apache2 state=stopped

#Restart mysql
  - hosts:  database
    become:  true
    tasks:
      - name:  ensure mysql stopped
        service:  name=mysql state=stopped

ansible-playbook playbook/stop_stack.yml

================================================
Install git on the unix machine
sudo apt-get install git
cloning git
git clone https://github.com/wipphanp/ansible

=============================================

cd /etc/nginx
cd sites-available

default -> /etc/nginx/sites-available/default

===================================================
Roles 
----
Roles are specific functions which can be reused.

1. handlers - to raise after the notify
2.tasks:
3.templates:
4.Vars:if the vars are not mentioned than it will read from the default directory.
5.defaults : it is specific to each role eg :nginx
6.files:specific application files like 
5.  

ansible-galaxy is the utility provided by ansible to create roles

ansible-galaxy init control
ansible-galaxy init apache2
ansible-galaxy init demo_App
ansible-galaxy init msql
ansible-galaxy init nginx

vagrant@control:~/ansible/roles/control/tasks$

vagrant@control:~/ansible/roles/mysql/tasks$

vagrant@control:~/ansible/roles/apache2/handlers$

# defaults file for mysql
db_name: myapp
db_user_name: dbuser
db_user_pass: dbpass
db_user_host: localhost

line 44 col 66

vagrant@control:~/ansible/roles/mysql/tasks$

"bind-address ={{  ansible_eth1.ipv4.address  }}"

=================================
time ansible-playbook playbooks/stack_restart.yml

========================================
performance tuning of playbooks

gather_facts
ansible-playbook sites.yml  --list-tags
ansible-playbook sites.yml  --tags "packages"

============================================

